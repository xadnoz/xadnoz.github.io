(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{497:function(a,t,e){"use strict";e.r(t);var s=e(42),o=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("The following commands can be used to connect to the different networks.")]),a._v(" "),e("h2",{attrs:{id:"development"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#development"}},[a._v("#")]),a._v(" Development")]),a._v(" "),e("p",[a._v("Install Polkadot and have a "),e("code",[a._v("polkadot")]),a._v(" binary install to your "),e("code",[a._v("PATH")]),a._v(" with:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("cargo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --git https://github.com/paritytech/polkadot.git polkadot\n")])])]),e("p",[a._v('You can run a simple single-node development "network" on your machine by running in a terminal:')]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("polkadot --dev\n")])])]),e("p",[a._v("You can muck around by cloning and building the http://github.com/paritytech/polka-ui and http://github.com/paritytech/polkadot-ui or just heading to https://polkadot.js.org/apps.")]),a._v(" "),e("h2",{attrs:{id:"krumme-lanke"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#krumme-lanke"}},[a._v("#")]),a._v(" Krumme Lanke")]),a._v(" "),e("p",[a._v("Krumme Lanke is a testnet network used during the development of PoC-2.")]),a._v(" "),e("p",[a._v("Install Polkadot PoC-2 and have a "),e("code",[a._v("polkadot")]),a._v(" binary installed to your "),e("code",[a._v("PATH")]),a._v(" with:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("cargo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --git https://github.com/paritytech/substrate.git --branch v0.2 polkadot\n")])])]),e("p",[a._v('Connect to the global "Krumme Lanke" testnet by default by running:')]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("polkadot\n")])])]),e("h2",{attrs:{id:"alexander-poc-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#alexander-poc-4"}},[a._v("#")]),a._v(" Alexander (PoC-4)")]),a._v(" "),e("p",[a._v("Alexander is a testnet network used during the development of PoC-3 and PoC-4.")]),a._v(" "),e("p",[a._v("Install Polkadot PoC-4 and have a "),e("code",[a._v("polkadot")]),a._v(" binary installed to your "),e("code",[a._v("PATH")]),a._v(" with:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("cargo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --git https://github.com/paritytech/polkadot.git --branch v0.4 polkadot\n")])])]),e("p",[a._v('Connect to the global "Alexander" testnet by default by running:')]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("polkadot\n")])])]),e("h2",{attrs:{id:"local-two-node-testnet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#local-two-node-testnet"}},[a._v("#")]),a._v(" Local Two-Node Testnet")]),a._v(" "),e("p",[a._v("If you want to see the multi-node consensus algorithm in action locally, then you can create a local testnet. You'll need two terminals open. In one, run:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("polkadot --chain"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("local --validator --key Alice -d /tmp/alice\n")])])]),e("p",[a._v("and in the other, run:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("polkadot --chain"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("local --validator --key Bob -d /tmp/bob --port "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("30334")]),a._v(" --bootnodes "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/ip4/127.0.0.1/tcp/30333/p2p/ALICE_BOOTNODE_ID_HERE'")]),a._v("\n")])])]),e("p",[a._v("Ensure you replace "),e("code",[a._v("ALICE_BOOTNODE_ID_HERE")]),a._v(" with the node ID from the output of the first terminal.")])])}),[],!1,null,null,null);t.default=o.exports}}]);