(window.webpackJsonp=window.webpackJsonp||[]).push([[973],{1403:function(e,a,t){"use strict";t.r(a);var s=t(42),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("这个指南经已更新到Alexander测试网络")]),e._v(" "),t("h2",{attrs:{id:"如何查询平行链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何查询平行链"}},[e._v("#")]),e._v(" 如何查询平行链")]),e._v(" "),t("p",[e._v("On the "),t("a",{attrs:{href:"https://polkadot.js.org/apps/#/explorer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Polkadot UI"),t("OutboundLink")],1),e._v(" navigate to the "),t("code",[e._v("Chain State")]),e._v(" tab. Select the "),t("code",[e._v("parachains")]),e._v(" module and the "),t("code",[e._v("parachains()")]),e._v(" then hit the "),t("code",[e._v("+")]),e._v(" button. It will return an array of the currently active parachains.")]),e._v(" "),t("h2",{attrs:{id:"如何部署adder平行链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何部署adder平行链"}},[e._v("#")]),e._v(" 如何部署Adder平行链")]),e._v(" "),t("p",[t("strong",[e._v("You will need to have the minimum deposit needed to create a referendum. Currently this minimum is 5 DOTs.")])]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("adder")]),e._v(" parachain is a simple parachain which will keep a value in storage and add to this value as messages are sent to it. It can be found in the Polkadot repository under the "),t("code",[e._v("test-parachains")]),e._v(" folder.")]),e._v(" "),t("blockquote",[t("p",[e._v("A slightly out-of-date video version of this guide presented by Adrian Brink is available "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=pDqkzvA4C0E",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(". When the two guides diverge, please refer to this written text as definitive and updated.")])]),e._v(" "),t("h3",{attrs:{id:"代码生成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码生成"}},[e._v("#")]),e._v(" 代码生成")]),e._v(" "),t("p",[e._v("第一步首先下载Polkadot代码到你本地目录")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/paritytech/polkadot.git\n")])])]),t("p",[e._v("确保你经己安装好了Rust")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" https://sh.rustup.rs -sSf "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" clang pkg-config libssl-dev\nrustup update\n")])])]),t("p",[e._v("Now navigate to the "),t("code",[e._v("test-parachains")]),e._v(" folder in the Polkadot code repository and run the build script.")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" polkadot/test-parachains\n./build.sh\n")])])]),t("p",[e._v("This will create the Wasm executable of the simple "),t("code",[e._v("adder")]),e._v(" parachain contained in this folder. This parachain will simply add messages that are sent to it. The Wasm executable will output into the "),t("code",[e._v("parachains/test/res/adder.wasm")]),e._v(" path so make sure you are able to find it there.")]),e._v(" "),t("p",[e._v("You will need to build and run the collator node in order to get the genesis state of this parachain.")]),e._v(" "),t("p",[e._v("前往"),t("code",[e._v("test-parachains/adder/collator")]),e._v("资料夹并执行"),t("code",[e._v("build")]),e._v("和"),t("code",[e._v("run")]),e._v("指令")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("cargo build\ncargo run\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("ctrl-c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),t("p",[e._v("停止校对人节点后你将获得如下结果：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Starting adder collator with genesis:\nDec: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 27, 77, 3, 221, 140, 1, 241, 4, 145, 67,\n207, 156, 76, 129, 126, 75, 22, 127, 29, 27, 131, 229, 198, 240, 241, 13, 137, 186, 30, 123, 206]\nHex: 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000011b4d03dd8c01f1049143cf9c4c817e4b167f1d1b83e5c6f0f10d89ba1e7bce\n")])])]),t("p",[e._v("The important information is the hex string. This is your genesis state and you will need to save it for the next steps.")]),e._v(" "),t("h3",{attrs:{id:"部署平行链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署平行链"}},[e._v("#")]),e._v(" 部署平行链")]),e._v(" "),t("p",[e._v("Go to "),t("a",{attrs:{href:"https://polkadot.js.org/apps/#/extrinsics",target:"_blank",rel:"noopener noreferrer"}},[e._v("Polkadot UI"),t("OutboundLink")],1),e._v(" on the "),t("code",[e._v("Extrinsics")]),e._v(" tab. Select the account you wish to deploy the parachain from. You will need to create a referendum to deploy the parachain.")]),e._v(" "),t("p",[e._v("Click on "),t("code",[e._v("democracy")]),e._v(" -> "),t("code",[e._v("propose(proposal,value)")]),e._v(" -> "),t("code",[e._v("parachains")]),e._v(" -> "),t("code",[e._v("registerParachain(id,code,initial_head_data)")]),e._v(".")]),e._v(" "),t("p",[e._v("In the "),t("code",[e._v("id")]),e._v(" input enter in the id of the parachain. In the case of the simple adder it will be "),t("code",[e._v("100")]),e._v(". In the "),t("code",[e._v("code")]),e._v(" field click on the page button and then upload the "),t("code",[e._v("adder.wasm")]),e._v(" binary that was compiled from before. In the "),t("code",[e._v("initial_head_data")]),e._v(" we will copy and paste the hex data that we got from running the collator node. In the "),t("code",[e._v("value")]),e._v(" field you will need to input the minimum required value for creating a referendum. At the time of writing this is "),t("em",[e._v("5 DOTs")]),e._v(" on the Alexander testnet.")]),e._v(" "),t("p",[t("img",{attrs:{src:"assets/parachain/register.png",alt:"registering a parachain"}})]),e._v(" "),t("p",[e._v("If you navigate to the "),t("code",[e._v("Democracy")]),e._v(" tab you will be able to see your proposal in the proposals section.")]),e._v(" "),t("p",[e._v("Once you wait for the proposal to become a referendum you will be able to vote "),t("code",[e._v("Nay")]),e._v(" or "),t("code",[e._v("Aye")]),e._v(" on it. Assumably, you will vote Aye as this will be a vote for the deployment of your parachain.")]),e._v(" "),t("p",[t("img",{attrs:{src:"assets/parachain/referendum.png",alt:"parachain referendum"}})]),e._v(" "),t("p",[e._v("After the voting period of your referendum goes through you will be able to query the state of your parachain.")]),e._v(" "),t("p",[e._v("You can go to the "),t("code",[e._v("Chain State")]),e._v(" tab and by querying the "),t("code",[e._v("parachains")]),e._v(" state you should be able to see some information on your parachain.")]),e._v(" "),t("p",[t("img",{attrs:{src:"assets/parachain/info.png",alt:"parachain info"}})]),e._v(" "),t("h3",{attrs:{id:"与parachain互动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与parachain互动"}},[e._v("#")]),e._v(" 与Parachain互动")]),e._v(" "),t("p",[t("em",[e._v("Coming soon")])])])}),[],!1,null,null,null);a.default=r.exports}}]);