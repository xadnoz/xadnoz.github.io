(window.webpackJsonp=window.webpackJsonp||[]).push([[1073],{1293:function(e,r,t){"use strict";t.r(r);var n=t(42),a=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"rand"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rand"}},[e._v("#")]),e._v(" Rand")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://travis-ci.org/rust-random/rand",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://travis-ci.org/rust-random/rand.svg?branch=master",alt:"Build Status"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://ci.appveyor.com/project/rust-random/rand",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://ci.appveyor.com/api/projects/status/github/rust-random/rand?svg=true",alt:"Build Status"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://crates.io/crates/rand",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://img.shields.io/crates/v/rand.svg",alt:"Crate"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://rust-random.github.io/book/",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://img.shields.io/badge/book-master-yellow.svg",alt:"Book"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://rust-random.github.io/rand",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://img.shields.io/badge/api-master-yellow.svg",alt:"API"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://docs.rs/rand",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://docs.rs/rand/badge.svg",alt:"API"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://github.com/rust-random/rand#rust-version-requirements",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://img.shields.io/badge/rustc-1.32+-lightgray.svg",alt:"Minimum rustc version"}}),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("A Rust library for random number generation.")]),e._v(" "),t("p",[e._v("Rand provides utilities to generate random numbers, to convert them to useful\ntypes and distributions, and some randomness-related algorithms.")]),e._v(" "),t("p",[e._v("The core random number generation traits of Rand live in the "),t("a",{attrs:{href:"https://crates.io/crates/rand_core",target:"_blank",rel:"noopener noreferrer"}},[e._v("rand_core"),t("OutboundLink")],1),e._v(" crate but are also exposed here; RNG\nimplementations should prefer to use "),t("code",[e._v("rand_core")]),e._v(" while most other users should\ndepend on "),t("code",[e._v("rand")]),e._v(".")]),e._v(" "),t("p",[e._v("Documentation:")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://rust-random.github.io/book",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Rust Rand Book"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://rust-random.github.io/rand",target:"_blank",rel:"noopener noreferrer"}},[e._v("API reference (master)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://docs.rs/rand",target:"_blank",rel:"noopener noreferrer"}},[e._v("API reference (docs.rs)"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),t("p",[e._v("Add this to your "),t("code",[e._v("Cargo.toml")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("dependencies")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("rand")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.7"')]),e._v("\n")])])]),t("p",[e._v("To get started using Rand, see "),t("a",{attrs:{href:"https://rust-random.github.io/book",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Book"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"versions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#versions"}},[e._v("#")]),e._v(" Versions")]),e._v(" "),t("p",[e._v("Rand libs have inter-dependencies and make use of the\n"),t("a",{attrs:{href:"https://github.com/dtolnay/semver-trick/",target:"_blank",rel:"noopener noreferrer"}},[e._v("semver trick"),t("OutboundLink")],1),e._v(" in order to make traits\ncompatible across crate versions. (This is especially important for "),t("code",[e._v("RngCore")]),e._v("\nand "),t("code",[e._v("SeedableRng")]),e._v(".) A few crate releases are thus compatibility shims,\ndepending on the "),t("em",[e._v("next")]),e._v(" lib version (e.g. "),t("code",[e._v("rand_core")]),e._v(" versions "),t("code",[e._v("0.2.2")]),e._v(" and\n"),t("code",[e._v("0.3.1")]),e._v("). This means, for example, that "),t("code",[e._v("rand_core_0_4_0::SeedableRng")]),e._v(" and\n"),t("code",[e._v("rand_core_0_3_0::SeedableRng")]),e._v(" are distinct, incompatible traits, which can\ncause build errors. Usually, running "),t("code",[e._v("cargo update")]),e._v(" is enough to fix any issues.")]),e._v(" "),t("p",[e._v("The Rand lib is not yet stable, however we are careful to limit breaking changes\nand warn via deprecation wherever possible. Patch versions never introduce\nbreaking changes. The following minor versions are supported:")]),e._v(" "),t("ul",[t("li",[e._v("Version 0.7 was released in June 2019, moving most non-uniform distributions\nto an external crate, moving "),t("code",[e._v("from_entropy")]),e._v(" to "),t("code",[e._v("SeedableRng")]),e._v(", and many small\nchanges and fixes.")]),e._v(" "),t("li",[e._v("Version 0.6 was released in November 2018, redesigning the "),t("code",[e._v("seq")]),e._v(" module,\nmoving most PRNGs to external crates, and many small changes.")]),e._v(" "),t("li",[e._v("Version 0.5 was released in May 2018, as a major reorganisation\n(introducing "),t("code",[e._v("RngCore")]),e._v(" and "),t("code",[e._v("rand_core")]),e._v(", and deprecating "),t("code",[e._v("Rand")]),e._v(" and the\nprevious distribution traits).")]),e._v(" "),t("li",[e._v("Version 0.4 was released in December 2017, but contained almost no breaking\nchanges from the 0.3 series.")])]),e._v(" "),t("p",[e._v("A detailed "),t("RouterLink",{attrs:{to:"/rand/CHANGELOG.html"}},[e._v("changelog")]),e._v(" is available.")],1),e._v(" "),t("p",[e._v("When upgrading to the next minor series (especially 0.4 â†’ 0.5), we recommend\nreading the "),t("a",{attrs:{href:"https://rust-random.github.io/book/update.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Upgrade Guide"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"yanked-versions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yanked-versions"}},[e._v("#")]),e._v(" Yanked versions")]),e._v(" "),t("p",[e._v('Some versions of Rand crates have been yanked ("unreleased"). Where this occurs,\nthe crate\'s CHANGELOG '),t("em",[e._v("should")]),e._v(" be updated with a rationale, and a search on the\nissue tracker with the keyword "),t("code",[e._v("yank")]),e._v(" "),t("em",[e._v("should")]),e._v(" uncover the motivation.")]),e._v(" "),t("h3",{attrs:{id:"rust-version-requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rust-version-requirements"}},[e._v("#")]),e._v(" Rust version requirements")]),e._v(" "),t("p",[e._v("Since version 0.7, Rand requires "),t("strong",[e._v("Rustc version 1.32 or greater")]),e._v(".\nRand 0.5 requires Rustc 1.22 or greater while versions\n0.4 and 0.3 (since approx. June 2017) require Rustc version 1.15 or\ngreater. Subsets of the Rand code may work with older Rust versions, but this\nis not supported.")]),e._v(" "),t("p",[e._v("Travis CI always has a build with a pinned version of Rustc matching the oldest\nsupported Rust release. The current policy is that this can be updated in any\nRand release if required, but the change must be noted in the changelog.")]),e._v(" "),t("h2",{attrs:{id:"crate-features"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crate-features"}},[e._v("#")]),e._v(" Crate Features")]),e._v(" "),t("p",[e._v("Rand is built with these features enabled by default:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("std")]),e._v(" enables functionality dependent on the "),t("code",[e._v("std")]),e._v(" lib")]),e._v(" "),t("li",[t("code",[e._v("alloc")]),e._v(" (implied by "),t("code",[e._v("std")]),e._v(") enables functionality requiring an allocator\n(when using this feature in "),t("code",[e._v("no_std")]),e._v(", Rand requires Rustc version 1.36 or\ngreater)")]),e._v(" "),t("li",[t("code",[e._v("getrandom")]),e._v(" (implied by "),t("code",[e._v("std")]),e._v(") is an optional dependency providing the code\nbehind "),t("code",[e._v("rngs::OsRng")])]),e._v(" "),t("li",[t("code",[e._v("std_rng")]),e._v(" enables inclusion of "),t("code",[e._v("StdRng")]),e._v(", "),t("code",[e._v("thread_rng")]),e._v(" and "),t("code",[e._v("random")]),e._v("\n(the latter two "),t("em",[e._v("also")]),e._v(" require that "),t("code",[e._v("std")]),e._v(" be enabled)")])]),e._v(" "),t("p",[e._v("Optionally, the following dependencies can be enabled:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("log")]),e._v(" enables logging via the "),t("code",[e._v("log")]),e._v(" crate` crate")])]),e._v(" "),t("p",[e._v("Additionally, these features configure Rand:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("small_rng")]),e._v(" enables inclusion of the "),t("code",[e._v("SmallRng")]),e._v(" PRNG")]),e._v(" "),t("li",[t("code",[e._v("nightly")]),e._v(" enables all experimental features")]),e._v(" "),t("li",[t("code",[e._v("simd_support")]),e._v(" (experimental) enables sampling of SIMD values\n(uniformly random SIMD integers and floats)")])]),e._v(" "),t("p",[e._v("Rand supports limited functionality in "),t("code",[e._v("no_std")]),e._v(" mode (enabled via\n"),t("code",[e._v("default-features = false")]),e._v("). In this case, "),t("code",[e._v("OsRng")]),e._v(" and "),t("code",[e._v("from_entropy")]),e._v(" are\nunavailable (unless "),t("code",[e._v("getrandom")]),e._v(" is enabled), large parts of "),t("code",[e._v("seq")]),e._v(" are\nunavailable (unless "),t("code",[e._v("alloc")]),e._v(" is enabled), and "),t("code",[e._v("thread_rng")]),e._v(" and "),t("code",[e._v("random")]),e._v(" are\nunavailable.")]),e._v(" "),t("h1",{attrs:{id:"license"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[e._v("#")]),e._v(" License")]),e._v(" "),t("p",[e._v("Rand is distributed under the terms of both the MIT license and the\nApache License (Version 2.0).")]),e._v(" "),t("p",[e._v("See "),t("a",{attrs:{href:"LICENSE-APACHE"}},[e._v("LICENSE-APACHE")]),e._v(" and "),t("a",{attrs:{href:"LICENSE-MIT"}},[e._v("LICENSE-MIT")]),e._v(", and\n"),t("a",{attrs:{href:"COPYRIGHT"}},[e._v("COPYRIGHT")]),e._v(" for details.")])])}),[],!1,null,null,null);r.default=a.exports}}]);