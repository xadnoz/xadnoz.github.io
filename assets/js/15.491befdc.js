(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{379:function(e,t,s){"use strict";s.r(t);var a=s(42),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"api-test-categories"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-test-categories"}},[e._v("#")]),e._v(" API Test Categories")]),e._v(" "),s("p",[e._v("This guide describes the categorization of tests.")]),e._v(" "),s("h2",{attrs:{id:"method-tests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#method-tests"}},[e._v("#")]),e._v(" Method Tests")]),e._v(" "),s("p",[e._v("A "),s("code",[e._v("method")]),e._v(" test is the "),s("code",[e._v("apitest")]),e._v(" analog of a unit test.  It tests a single API method such as "),s("code",[e._v("getbalance")]),e._v(", but is not\nconsidered a unit test because the code execution path traverses so many layers:  from "),s("code",[e._v("gRPC")]),e._v(" client -> "),s("code",[e._v("gRPC")]),e._v(" server\nside service -> one or more Bisq "),s("code",[e._v("core")]),e._v(" services, and back to the client.")]),e._v(" "),s("p",[e._v("Method tests have direct access to "),s("code",[e._v("gRPC")]),e._v(" client stubs, and test asserts are made directly on "),s("code",[e._v("gRPC")]),e._v(" return values --\nJava Objects.")]),e._v(" "),s("p",[e._v("All "),s("code",[e._v("method")]),e._v(" tests are part of the "),s("code",[e._v("bisq.apitest.method")]),e._v(" package.")]),e._v(" "),s("h2",{attrs:{id:"scenario-tests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scenario-tests"}},[e._v("#")]),e._v(" Scenario Tests")]),e._v(" "),s("p",[e._v("A "),s("code",[e._v("scenario")]),e._v(" test is a narrow or broad functional test case covering a simple use case such as funding a wallet to a\ncomplex series of trades.  Generally, a scenario test case requires multiple "),s("code",[e._v("gRPC")]),e._v(" method calls.")]),e._v(" "),s("p",[e._v("Scenario tests have direct access to "),s("code",[e._v("gRPC")]),e._v(" client stubs, and test asserts are made directly on "),s("code",[e._v("gRPC")]),e._v(" return values --\nJava Objects.")]),e._v(" "),s("p",[e._v("All "),s("code",[e._v("scenario")]),e._v(" tests are part of the "),s("code",[e._v("bisq.apitest.scenario")]),e._v(" package.")]),e._v(" "),s("h2",{attrs:{id:"end-to-end-tests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#end-to-end-tests"}},[e._v("#")]),e._v(" End to End Tests")]),e._v(" "),s("p",[e._v("An end to end ("),s("code",[e._v("e2e")]),e._v(") test can cover a narrow or broad use case, and all client calls go through the "),s("code",[e._v("CLI")]),e._v(" shell script\n"),s("code",[e._v("bisq-cli")]),e._v(".  End to end tests do not have access to "),s("code",[e._v("gRPC")]),e._v(" client stubs, and test asserts are made on what the end\nuser sees on the console -- what"),s("code",[e._v("gRPC CLI")]),e._v(" prints to "),s("code",[e._v("STDOUT")]),e._v(".")]),e._v(" "),s("p",[e._v("As test coverage grows, stable scenario test cases should be migrated to "),s("code",[e._v("e2e")]),e._v(" test cases.")]),e._v(" "),s("p",[e._v("All "),s("code",[e._v("e2e")]),e._v(" tests are part of the "),s("code",[e._v("bisq.apitest.e2e")]),e._v(" package.")])])}),[],!1,null,null,null);t.default=o.exports}}]);