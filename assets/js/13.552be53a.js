(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{378:function(e,t,s){"use strict";s.r(t);var a=s(42),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"build-and-run-api-test-harness"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-and-run-api-test-harness"}},[e._v("#")]),e._v(" Build and Run API Test Harness")]),e._v(" "),s("h2",{attrs:{id:"linux-osx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-osx"}},[e._v("#")]),e._v(" Linux & OSX")]),e._v(" "),s("p",[e._v("The API test harness uses the GNU Bourne-Again SHell "),s("code",[e._v("bash")]),e._v(", and is not supported on Windows.")]),e._v(" "),s("h2",{attrs:{id:"predefined-dao-regtest-setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#predefined-dao-regtest-setup"}},[e._v("#")]),e._v(" Predefined DAO / Regtest Setup")]),e._v(" "),s("p",[e._v("The API test harness depends on the contents of https://github.com/bisq-network/bisq/raw/master/docs/dao-setup.zip.\nThe files contained in dao-setup.zip include a bitcoin-core wallet, a regtest genesis tx and chain of 111 blocks, plus\ndata directories for Bob and Alice Bisq instances.  Bob & Alice wallets are pre-configured with 10 BTC each, and the\nequivalent of 2.5 BTC in BSQ distributed among Bob & Alice's BSQ wallets.")]),e._v(" "),s("p",[e._v("See https://github.com/bisq-network/bisq/blob/master/docs/dao-setup.md for details.")]),e._v(" "),s("h2",{attrs:{id:"install-dao-regtest-setup-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-dao-regtest-setup-files"}},[e._v("#")]),e._v(" Install DAO / Regtest Setup Files")]),e._v(" "),s("p",[e._v("Bisq's gradle build file defines a task for downloading dao-setup.zip and extracting its contents to the\n"),s("code",[e._v("apitest/src/main/resources")]),e._v(" folder, and the test harness will install a fresh set of data files to the\n"),s("code",[e._v("apitest/build/resources/main")]),e._v(" folder during a test case's scaffold setup phase -- normally a static "),s("code",[e._v("@BeforeAll")]),e._v(" method.")]),e._v(" "),s("p",[e._v("The dao-setup files can be downloaded during a normal build:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("$ ./gradlew clean build :apitest:installDaoSetup\n")])])]),s("p",[e._v("Or by running a single task:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("$ ./gradlew :apitest:installDaoSetup\n")])])]),s("p",[e._v("The "),s("code",[e._v(":apitest:installDaoSetup")]),e._v(" task does not need to be run again until after the next time you run the gradle "),s("code",[e._v("clean")]),e._v(" task.")]),e._v(" "),s("h2",{attrs:{id:"run-api-tests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-api-tests"}},[e._v("#")]),e._v(" Run API Tests")]),e._v(" "),s("p",[e._v("The API test harness supports narrow & broad functional and full end to end test cases requiring\nlong setup and teardown times -- for example, to start a bitcoind instance, seednode, arbnode, plus Bob & Alice\nBisq instances, then shut everything down in proper order.  For this reason, API test cases do not run during a normal\ngradle build.")]),e._v(" "),s("p",[e._v("To run API test cases, pass system property"),s("code",[e._v("-DrunApiTests=true")]),e._v(".")]),e._v(" "),s("p",[e._v("To run all existing test cases:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("$ ./gradlew  :apitest:test -DrunApiTests=true\n")])])]),s("p",[e._v("To run all test cases in a package:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v('$ ./gradlew  :apitest:test --tests "bisq.apitest.method.*" -DrunApiTests=true\n')])])]),s("p",[e._v("To run a single test case:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v('$ ./gradlew  :apitest:test --tests "bisq.apitest.method.GetBalanceTest" -DrunApiTests=true\n')])])]),s("p",[e._v("To run test cases from Intellij, add two JVM arguments to your JUnit launchers:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("-DrunApiTests=true -Dlogback.configurationFile=apitest/build/resources/main/logback.xml\n")])])]),s("p",[e._v("The "),s("code",[e._v("-Dlogback.configurationFile")]),e._v(" property will prevent "),s("code",[e._v("logback")]),e._v(" from printing warnings about multiple "),s("code",[e._v("logback.xml")]),e._v("\nfiles it will find in Bisq jars "),s("code",[e._v("cli.jar")]),e._v(", "),s("code",[e._v("daemon.jar")]),e._v(", and "),s("code",[e._v("seednode.jar")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"gradle-test-reports"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gradle-test-reports"}},[e._v("#")]),e._v(" Gradle Test Reports")]),e._v(" "),s("p",[e._v("To see detailed test results, logs, and full stack traces for test failures, open\n"),s("code",[e._v("apitest/build/reports/tests/test/index.html")]),e._v(" in a browser.")]),e._v(" "),s("h2",{attrs:{id:"see-also"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#see-also"}},[e._v("#")]),e._v(" See also")]),e._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/bisq/apitest/docs/test-categories.html"}},[e._v("test-categories.md")])],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);