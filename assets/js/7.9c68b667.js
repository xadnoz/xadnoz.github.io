(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{393:function(e,t,a){"use strict";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://circleci.com/gh/w3f/polkadot-wiki",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://circleci.com/gh/w3f/polkadot-wiki.svg?style=svg",alt:"CircleCI"}}),a("OutboundLink")],1)]),e._v(" "),a("h1",{attrs:{id:"polkadot-wiki"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#polkadot-wiki"}},[e._v("#")]),e._v(" Polkadot Wiki")]),e._v(" "),a("p",[e._v("The Polkadot Wiki is the central source of truth for Polkadot. It is a community-focused initiative\nled by the Web3 Foundation to keep an up-to-date resource on the best information for building on\nPolkadot, learning about Polkadot, or maintaining a node on Polkadot.")]),e._v(" "),a("h2",{attrs:{id:"contributing-to-documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contributing-to-documentation"}},[e._v("#")]),e._v(" Contributing to Documentation")]),e._v(" "),a("p",[e._v("The Wiki is a community-focused initiative and we will review all pull-requests and issues created\nin this repository. If you notice typos or grammatical errors, please feel free to directly create\npull requests with these corrections. Larger contributions may start as issues to test the waters on\nthe subject with the maintainers. It is generally preferable to create a pull request over an issue\nto propose a change to the wiki content.")]),e._v(" "),a("h3",{attrs:{id:"style-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#style-guide"}},[e._v("#")]),e._v(" Style Guide")]),e._v(" "),a("p",[e._v("Use the style guide from the\n"),a("a",{attrs:{href:"https://github.com/substrate-developer-hub/knowledgebase/blob/master/CONTRIBUTING.md#documentation-style",target:"_blank",rel:"noopener noreferrer"}},[e._v("Substrate Knowledge Base"),a("OutboundLink")],1)]),e._v(" "),a("h4",{attrs:{id:"formatting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#formatting"}},[e._v("#")]),e._v(" Formatting")]),e._v(" "),a("p",[e._v("Use "),a("a",{attrs:{href:"https://prettier.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Prettier"),a("OutboundLink")],1),e._v(" to format markdown pages. To run Prettier on the "),a("code",[e._v("docs")]),e._v(" folder,\nrun:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("npx prettier --write ./docs/\n")])])]),a("h3",{attrs:{id:"automated-deployments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#automated-deployments"}},[e._v("#")]),e._v(" Automated Deployments")]),e._v(" "),a("p",[e._v("The wiki is automatically deployed to GitHub Pages via the CircleCI job on each new commit to the\nmaster branch.")]),e._v(" "),a("h3",{attrs:{id:"dynamic-value-inserts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-value-inserts"}},[e._v("#")]),e._v(" Dynamic Value Inserts")]),e._v(" "),a("p",[e._v("This documentation sometimes makes references to on-chain values that may change over time. For\nexample, it might reference the current number of validators. A custom script exists to populate\nthese values post-build. To avoid conflicts in source files, the replacement is done on "),a("strong",[e._v("built")]),e._v("\nfiles, not the MD files. The value placeholders are defined in\n"),a("a",{attrs:{href:"website/inject-dict.json"}},[e._v("website/inject-dict.json")]),e._v(". The placeholders should be included in text\nsurrounded by double curly braces, like so: "),a("code",[e._v(e._s(e.num_validators))]),e._v(".")]),e._v(" "),a("p",[e._v("To use the replace script:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" website\nnode inject.js\n")])])]),a("p",[e._v("This will read the dictionary and do the replacements.")]),e._v(" "),a("p",[e._v("It is recommended to use the dry run option when adding new values and templates in, to make sure\nthey resolve to values first and don't throw query errors. To use dry run (no replace, just output\nof templates and their resolved potential replacements), use the "),a("code",[e._v("--dry")]),e._v(" or "),a("code",[e._v("-d")]),e._v(" flag:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("node inject.js --dry\n")])])]),a("p",[e._v("The script defaults to the websocket URL "),a("code",[e._v("wss://kusama-rpc.polkadot.io/")]),e._v(". To change to another URL\nor to connect to a local node, use the "),a("code",[e._v("--node/-n")]),e._v(" flag:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("node inject.js -n ws:localhost:9944\n")])])]),a("blockquote",[a("p",[e._v("Note: make sure you're running an archive node if you're querying into the past!")])]),e._v(" "),a("p",[e._v("See other available options by using the "),a("code",[e._v("help")]),e._v(" command.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("node inject.js "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("help")]),e._v("\n")])])]),a("h3",{attrs:{id:"mirror-pages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mirror-pages"}},[e._v("#")]),e._v(" Mirror pages")]),e._v(" "),a("p",[e._v("A limitation of Docusaurus is that pages can only be included in one sidebar at any given time.\nThus, our Kusama section will either hijack some content it shares with the rest of the wiki, or\nlack that content.")]),e._v(" "),a("p",[e._v("To solve this, the repo mirrors some pages and includes them in additional sidebars. The "),a("code",[e._v("website")]),e._v("\nfolder contains a "),a("code",[e._v("mirror.js")]),e._v(" script that creates a copy of the pages to duplicate across sidebars.\nThe new pages are prefixed with "),a("code",[e._v("mirror")]),e._v(", and first need to be declared in "),a("code",[e._v("mirror.js")]),e._v(" and added to\nthe relevant sidebar section. To run the script:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("node mirror.js\n")])])]),a("h2",{attrs:{id:"internationalization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#internationalization"}},[e._v("#")]),e._v(" Internationalization")]),e._v(" "),a("p",[e._v("We are using Crowdin to manage all different translations. You can go to the\n"),a("a",{attrs:{href:"https://crowdin.com/project/polkadot-wiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("project page"),a("OutboundLink")],1),e._v(" and select the language you would like to\ntranslate to start."),a("br"),e._v("\nAll translated content through Crowdin will regularly submit a pull request to this repository.")]),e._v(" "),a("p",[e._v("If you do not see the language you would like to translate, please let us know via Riot.")]),e._v(" "),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[e._v("#")]),e._v(" License")]),e._v(" "),a("p",[e._v("The Polkadot Wiki is licensed under the GPL-3.0 free software license.")])])}),[],!1,null,null,null);t.default=r.exports}}]);