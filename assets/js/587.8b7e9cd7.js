(window.webpackJsonp=window.webpackJsonp||[]).push([[587],{997:function(a,t,s){"use strict";s.r(t);var e=s(42),o=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("다음 커맨드들은 다른 네트워크들 끼리 연결하는데 사용 할 수 있습니다.")]),a._v(" "),s("h2",{attrs:{id:"development"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#development"}},[a._v("#")]),a._v(" Development")]),a._v(" "),s("p",[a._v("다음 명령어로 폴카닷(polkadot)을 설치하고 "),s("code",[a._v("polkadot")]),a._v(" 바이너리를 "),s("code",[a._v("PATH")]),a._v("에 등록하세요.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("cargo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --git https://github.com/paritytech/polkadot.git polkadot\n")])])]),s("p",[a._v('다음 명령어를 터미널에 입력해서 단순한 단일 노드 개발 "네트워크"를 작동 시킬 수 있습니다.')]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("polkadot --dev\n")])])]),s("p",[a._v("http://github.com/paritytech/polka-ui나 http://github.com/paritytech/polkadot-ui을 클로닝하거나 만들면서 노닥거릴수 있습니다. 아니면 https://polkadot.js.org/apps을 가리킬 수도 있습니다.")]),a._v(" "),s("h2",{attrs:{id:"krumme-lanke-베를린-남서쪽에-있는-호수-이름-역자-주"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#krumme-lanke-베를린-남서쪽에-있는-호수-이름-역자-주"}},[a._v("#")]),a._v(" Krumme Lanke (베를린 남서쪽에 있는 호수 이름 - 역자 주 )")]),a._v(" "),s("p",[a._v("Krumme Lanke는 PoC-2의 개발단계에서 사용했던 테스트넷 네트워크 입니다. 다음 명령어로 Polkadot PoC-2를 설치하고  "),s("code",[a._v("polkadot")]),a._v(" 바이너리를 "),s("code",[a._v("PATH")]),a._v("에 등록하세요.")]),a._v(" "),s("p",[a._v('글로벌 "Krumme Lanke" 테스트넷에 기본적으로 연결되어서 동작합니다. 명령어는 아래와 같습니다.')]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("cargo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --git https://github.com/paritytech/substrate.git --branch v0.2 polkadot\n")])])]),s("p",[a._v("Alexander 는 PoC-3와 PoC-4 개발단계에서 사용했던 테스트넷 네트워크 입니다. 다음 명령어로 Polkadot PoC-4를 설치하고  "),s("code",[a._v("polkadot")]),a._v(" 바이너리를 "),s("code",[a._v("PATH")]),a._v("에 등록하세요.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("polkadot\n")])])]),s("h2",{attrs:{id:"alexander-poc-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#alexander-poc-4"}},[a._v("#")]),a._v(" Alexander (PoC-4)")]),a._v(" "),s("p",[a._v('글로벌 "Alexander" 테스트넷에 기본적으로 연결되어서 동작합니다. 명령어는 아래와 같습니다.')]),a._v(" "),s("p",[a._v("다중 노드 합의 알고리즘 실행을 로컬에서 보고 싶다면 로컬 testnet을 생성 할 수 있습니다. 두 개의 터미널이 열려 있어야합니다. 하나는 다음을 실행하십시오.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("cargo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --git https://github.com/paritytech/polkadot.git --branch v0.4 polkadot\n")])])]),s("p",[a._v("다른 터미널에서는 다음 명령어를 실행하세요.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("polkadot\n")])])]),s("h2",{attrs:{id:"_2개의-노드로-테스트넷-작동시키기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2개의-노드로-테스트넷-작동시키기"}},[a._v("#")]),a._v(" 2개의 노드로 테스트넷 작동시키기")]),a._v(" "),s("p",[s("code",[a._v("ALICE_BOOTNODE_ID_HERE")]),a._v("를 첫 번째 터미널의 출력에서 노드 ID로 대체했는지 확인하십시오.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("polkadot --chain"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("local --validator --key Alice -d /tmp/alice\n")])])]),s("p",[a._v("and in the other, run:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("polkadot --chain"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("local --validator --key Bob -d /tmp/bob --port "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("30334")]),a._v(" --bootnodes "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/ip4/127.0.0.1/tcp/30333/p2p/ALICE_BOOTNODE_ID_HERE'")]),a._v("\n")])])]),s("p",[a._v("Ensure you replace "),s("code",[a._v("ALICE_BOOTNODE_ID_HERE")]),a._v(" with the node ID from the output of the first terminal.")])])}),[],!1,null,null,null);t.default=o.exports}}]);